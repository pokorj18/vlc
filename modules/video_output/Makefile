# Makefile.in generated by automake 1.11.5 from Makefile.am.
# modules/video_output/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# modules/video_output/Makefile.am automatically generated from modules/video_output/Modules.am by modules/genmf
# DO NOT EDIT THIS FILE DIRECTLY! See Modules.am instead.

# Common code for VLC modules/.../Makefile.am
#
# Copyright (C) 2005-2007 the VideoLAN team
# Copyright (C) 2005-2008 RÃ©mi Denis-Courmont
#
# Authors: Sam Hocevar <sam@zoy.org>


am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/vlc
pkgincludedir = $(includedir)/vlc
pkglibdir = $(libdir)/vlc
pkglibexecdir = $(libexecdir)/vlc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Modules.am $(top_srcdir)/modules/common.am
am__append_1 = -D__PLUGIN__
am__append_2 = \
	libxcb_x11_plugin.la \
	libxcb_window_plugin.la

#am__append_3 = libdrawable_plugin.la

### OS/2 ###
#am__append_4 = libdrawable_plugin.la
#am__append_5 = libkva_plugin.la
am__append_6 = $(X_LIBS) $(X_PRE_LIBS) -lX11
am__append_7 = $(X_LIBS) $(X_PRE_LIBS) -lX11
subdir = modules/video_output
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/flags.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/m4/vlc.m4 $(top_srcdir)/m4/with_pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libvlcdir)"
LTLIBRARIES = $(libvlc_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(LTLIBVLCCORE) \
	$(top_builddir)/compat/libcompat.la $(am__DEPENDENCIES_1)
am__objects_1 = libaa_plugin_la-aa.lo
am_libaa_plugin_la_OBJECTS = $(am__objects_1)
nodist_libaa_plugin_la_OBJECTS =
libaa_plugin_la_OBJECTS = $(am_libaa_plugin_la_OBJECTS) \
	$(nodist_libaa_plugin_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libaa_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libaa_plugin_la_CFLAGS) $(CFLAGS) $(libaa_plugin_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_2 = libandroid_surface_plugin_la-androidsurface.lo
am_libandroid_surface_plugin_la_OBJECTS = $(am__objects_2)
nodist_libandroid_surface_plugin_la_OBJECTS =
libandroid_surface_plugin_la_OBJECTS =  \
	$(am_libandroid_surface_plugin_la_OBJECTS) \
	$(nodist_libandroid_surface_plugin_la_OBJECTS)
libandroid_surface_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libandroid_surface_plugin_la_CFLAGS) $(CFLAGS) \
	$(libandroid_surface_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libcaca_plugin_la_OBJECTS = libcaca_plugin_la-caca.lo
libcaca_plugin_la_OBJECTS = $(am_libcaca_plugin_la_OBJECTS)
libcaca_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libcaca_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_3 = libdirectfb_plugin_la-directfb.lo
am_libdirectfb_plugin_la_OBJECTS = $(am__objects_3)
nodist_libdirectfb_plugin_la_OBJECTS =
libdirectfb_plugin_la_OBJECTS = $(am_libdirectfb_plugin_la_OBJECTS) \
	$(nodist_libdirectfb_plugin_la_OBJECTS)
libdirectfb_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libdirectfb_plugin_la_CFLAGS) $(CFLAGS) \
	$(libdirectfb_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
am_libdrawable_plugin_la_OBJECTS = libdrawable_plugin_la-drawable.lo
libdrawable_plugin_la_OBJECTS = $(am_libdrawable_plugin_la_OBJECTS)
libdrawable_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libdrawable_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libdrawable_plugin_la_rpath = -rpath $(libvlcdir)
#am_libdrawable_plugin_la_rpath = -rpath $(libvlcdir)
am_libegl_plugin_la_OBJECTS = libegl_plugin_la-egl.lo
libegl_plugin_la_OBJECTS = $(am_libegl_plugin_la_OBJECTS)
libegl_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libegl_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_4 = libfb_plugin_la-fb.lo
am_libfb_plugin_la_OBJECTS = $(am__objects_4)
nodist_libfb_plugin_la_OBJECTS =
libfb_plugin_la_OBJECTS = $(am_libfb_plugin_la_OBJECTS) \
	$(nodist_libfb_plugin_la_OBJECTS)
libfb_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libfb_plugin_la_CFLAGS) $(CFLAGS) $(libfb_plugin_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libgl_plugin_la_OBJECTS = libgl_plugin_la-opengl.lo \
	libgl_plugin_la-gl.lo
libgl_plugin_la_OBJECTS = $(am_libgl_plugin_la_OBJECTS)
libgl_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libgl_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_libgles1_plugin_la_OBJECTS = libgles1_plugin_la-opengl.lo \
	libgles1_plugin_la-gl.lo
libgles1_plugin_la_OBJECTS = $(am_libgles1_plugin_la_OBJECTS)
libgles1_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libgles1_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libgles2_plugin_la_OBJECTS = libgles2_plugin_la-opengl.lo \
	libgles2_plugin_la-gl.lo
libgles2_plugin_la_OBJECTS = $(am_libgles2_plugin_la_OBJECTS)
libgles2_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libgles2_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libkva_plugin_la_OBJECTS = libkva_plugin_la-kva.lo
libkva_plugin_la_OBJECTS = $(am_libkva_plugin_la_OBJECTS)
libkva_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libkva_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_libkva_plugin_la_rpath = -rpath $(libvlcdir)
am_libvdummy_plugin_la_OBJECTS = libvdummy_plugin_la-vdummy.lo
libvdummy_plugin_la_OBJECTS = $(am_libvdummy_plugin_la_OBJECTS)
libvdummy_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libvdummy_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_5 = libvmem_plugin_la-vmem.lo
am_libvmem_plugin_la_OBJECTS = $(am__objects_5)
nodist_libvmem_plugin_la_OBJECTS =
libvmem_plugin_la_OBJECTS = $(am_libvmem_plugin_la_OBJECTS) \
	$(nodist_libvmem_plugin_la_OBJECTS)
libvmem_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libvmem_plugin_la_CFLAGS) $(CFLAGS) \
	$(libvmem_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
am__objects_6 = libvout_ios_plugin_la-ios.lo \
	libvout_ios_plugin_la-opengl.lo
am_libvout_ios_plugin_la_OBJECTS = $(am__objects_6)
nodist_libvout_ios_plugin_la_OBJECTS =
libvout_ios_plugin_la_OBJECTS = $(am_libvout_ios_plugin_la_OBJECTS) \
	$(nodist_libvout_ios_plugin_la_OBJECTS)
libvout_ios_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(OBJCLD) \
	$(libvout_ios_plugin_la_OBJCFLAGS) $(OBJCFLAGS) \
	$(libvout_ios_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
am__objects_7 = libvout_macosx_plugin_la-macosx.lo \
	libvout_macosx_plugin_la-opengl.lo
am_libvout_macosx_plugin_la_OBJECTS = $(am__objects_7)
nodist_libvout_macosx_plugin_la_OBJECTS =
libvout_macosx_plugin_la_OBJECTS =  \
	$(am_libvout_macosx_plugin_la_OBJECTS) \
	$(nodist_libvout_macosx_plugin_la_OBJECTS)
libvout_macosx_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(OBJCLD) \
	$(libvout_macosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) \
	$(libvout_macosx_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
am__objects_8 = libvout_sdl_plugin_la-sdl.lo
am_libvout_sdl_plugin_la_OBJECTS = $(am__objects_8)
nodist_libvout_sdl_plugin_la_OBJECTS =
libvout_sdl_plugin_la_OBJECTS = $(am_libvout_sdl_plugin_la_OBJECTS) \
	$(nodist_libvout_sdl_plugin_la_OBJECTS)
libvout_sdl_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libvout_sdl_plugin_la_CFLAGS) $(CFLAGS) \
	$(libvout_sdl_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
am_libxcb_glx_plugin_la_OBJECTS = libxcb_glx_plugin_la-glx.lo \
	libxcb_glx_plugin_la-opengl.lo libxcb_glx_plugin_la-events.lo
libxcb_glx_plugin_la_OBJECTS = $(am_libxcb_glx_plugin_la_OBJECTS)
libxcb_glx_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libxcb_glx_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libxcb_window_plugin_la_OBJECTS =  \
	libxcb_window_plugin_la-window.lo \
	libxcb_window_plugin_la-keys.lo
libxcb_window_plugin_la_OBJECTS =  \
	$(am_libxcb_window_plugin_la_OBJECTS)
libxcb_window_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libxcb_window_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libxcb_window_plugin_la_rpath = -rpath $(libvlcdir)
am_libxcb_x11_plugin_la_OBJECTS = libxcb_x11_plugin_la-x11.lo \
	libxcb_x11_plugin_la-common.lo libxcb_x11_plugin_la-events.lo
libxcb_x11_plugin_la_OBJECTS = $(am_libxcb_x11_plugin_la_OBJECTS)
libxcb_x11_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libxcb_x11_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libxcb_x11_plugin_la_rpath = -rpath $(libvlcdir)
am_libxcb_xv_plugin_la_OBJECTS = libxcb_xv_plugin_la-xvideo.lo \
	libxcb_xv_plugin_la-common.lo libxcb_xv_plugin_la-events.lo
libxcb_xv_plugin_la_OBJECTS = $(am_libxcb_xv_plugin_la_OBJECTS)
libxcb_xv_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libxcb_xv_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_9 = libyuv_plugin_la-yuv.lo
am_libyuv_plugin_la_OBJECTS = $(am__objects_9)
nodist_libyuv_plugin_la_OBJECTS =
libyuv_plugin_la_OBJECTS = $(am_libyuv_plugin_la_OBJECTS) \
	$(nodist_libyuv_plugin_la_OBJECTS)
libyuv_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libyuv_plugin_la_CFLAGS) $(CFLAGS) \
	$(libyuv_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
LTOBJCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCFLAGS) $(OBJCFLAGS)
AM_V_OBJC = $(am__v_OBJC_$(V))
am__v_OBJC_ = $(am__v_OBJC_$(AM_DEFAULT_VERBOSITY))
am__v_OBJC_0 = @echo "  OBJC  " $@;
OBJCLD = $(OBJC)
OBJCLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCLD = $(am__v_OBJCLD_$(V))
am__v_OBJCLD_ = $(am__v_OBJCLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCLD_0 = @echo "  OBJCLD" $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libaa_plugin_la_SOURCES) $(nodist_libaa_plugin_la_SOURCES) \
	$(libandroid_surface_plugin_la_SOURCES) \
	$(nodist_libandroid_surface_plugin_la_SOURCES) \
	$(libcaca_plugin_la_SOURCES) $(libdirectfb_plugin_la_SOURCES) \
	$(nodist_libdirectfb_plugin_la_SOURCES) \
	$(libdrawable_plugin_la_SOURCES) $(libegl_plugin_la_SOURCES) \
	$(libfb_plugin_la_SOURCES) $(nodist_libfb_plugin_la_SOURCES) \
	$(libgl_plugin_la_SOURCES) $(libgles1_plugin_la_SOURCES) \
	$(libgles2_plugin_la_SOURCES) $(libkva_plugin_la_SOURCES) \
	$(libvdummy_plugin_la_SOURCES) $(libvmem_plugin_la_SOURCES) \
	$(nodist_libvmem_plugin_la_SOURCES) \
	$(libvout_ios_plugin_la_SOURCES) \
	$(nodist_libvout_ios_plugin_la_SOURCES) \
	$(libvout_macosx_plugin_la_SOURCES) \
	$(nodist_libvout_macosx_plugin_la_SOURCES) \
	$(libvout_sdl_plugin_la_SOURCES) \
	$(nodist_libvout_sdl_plugin_la_SOURCES) \
	$(libxcb_glx_plugin_la_SOURCES) \
	$(libxcb_window_plugin_la_SOURCES) \
	$(libxcb_x11_plugin_la_SOURCES) $(libxcb_xv_plugin_la_SOURCES) \
	$(libyuv_plugin_la_SOURCES) $(nodist_libyuv_plugin_la_SOURCES)
DIST_SOURCES = $(libaa_plugin_la_SOURCES) \
	$(libandroid_surface_plugin_la_SOURCES) \
	$(libcaca_plugin_la_SOURCES) $(libdirectfb_plugin_la_SOURCES) \
	$(libdrawable_plugin_la_SOURCES) $(libegl_plugin_la_SOURCES) \
	$(libfb_plugin_la_SOURCES) $(libgl_plugin_la_SOURCES) \
	$(libgles1_plugin_la_SOURCES) $(libgles2_plugin_la_SOURCES) \
	$(libkva_plugin_la_SOURCES) $(libvdummy_plugin_la_SOURCES) \
	$(libvmem_plugin_la_SOURCES) $(libvout_ios_plugin_la_SOURCES) \
	$(libvout_macosx_plugin_la_SOURCES) \
	$(libvout_sdl_plugin_la_SOURCES) \
	$(libxcb_glx_plugin_la_SOURCES) \
	$(libxcb_window_plugin_la_SOURCES) \
	$(libxcb_x11_plugin_la_SOURCES) $(libxcb_xv_plugin_la_SOURCES) \
	$(libyuv_plugin_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/pokac/vlc-2.0.4/autotools/missing --run aclocal-1.11
ALIASES =  cvlc rvlc svlc qvlc nvlc
ALSA_CFLAGS = -I/usr/include/alsa  
ALSA_LIBS = -lasound  
AMTAR = $${TAR-tar}
AM_CPPFLAGS = -DMODULE_NAME=$(MODULE_NAME) \
	-DMODULE_NAME_IS_$(MODULE_NAME) \
	-DMODULE_STRING=\"$(MODULE_NAME)\" $(am__append_1)
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARCH = x86_64 mmx sse sse2
AS = as
ASM = 
AUTOCONF = ${SHELL} /home/pokac/vlc-2.0.4/autotools/missing --run autoconf
AUTOHEADER = ${SHELL} /home/pokac/vlc-2.0.4/autotools/missing --run autoheader
AUTOMAKE = ${SHELL} /home/pokac/vlc-2.0.4/autotools/missing --run automake-1.11
AVCODEC_CFLAGS =  
AVCODEC_LIBS = -lavcodec -lavutil  
AVFORMAT_CFLAGS =  
AVFORMAT_LIBS = -lavformat -lavcodec -lavutil  
AWK = mawk
BLURAY_CFLAGS =  
BLURAY_LIBS = -lbluray  
BONJOUR_CFLAGS = -D_REENTRANT  
BONJOUR_LIBS = -lavahi-common -lavahi-client  
CACA_CFLAGS =  
CACA_LIBS = -lcaca  
CC = gcc -std=gnu99
CCAS = gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wmissing-prototypes -Wvolatile-register-var -Werror-implicit-function-declaration -pipe -fvisibility=hidden  -ffast-math -funroll-loops -fomit-frame-pointer -mtune=athlon64
CFLAGS_access_avio =    
CFLAGS_access_dv =    
CFLAGS_access_gnomevfs = 
CFLAGS_access_http =   
CFLAGS_access_jack =    
CFLAGS_access_mtp =  -I/usr/include/libusb-1.0   
CFLAGS_access_output_shout =  -pthread   
CFLAGS_avcodec =      
CFLAGS_avformat =    
CFLAGS_bonjour =  -D_REENTRANT   
CFLAGS_caca =    
CFLAGS_cdda =   
CFLAGS_dbus =  -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include  
CFLAGS_dc1394 =    
CFLAGS_deinterlace = 
CFLAGS_dirac =  -I/usr/include/dirac   
CFLAGS_dtstofloat32 =  -I/usr/include/libdca   
CFLAGS_dvdnav =   
CFLAGS_dvdread =    
CFLAGS_flac =  -I/usr/include/FLAC   
CFLAGS_fluidsynth =    
CFLAGS_globalhotkeys =     
CFLAGS_goom = 
CFLAGS_hildon = 
CFLAGS_i420_yuy2_altivec = 
CFLAGS_inhibit =  -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include  
CFLAGS_jack =    
CFLAGS_kate =    
CFLAGS_libass =  -I/usr/include/fribidi -I/usr/include/freetype2  
CFLAGS_libbluray =    
CFLAGS_libmpeg2 =  -I/usr/include/mpeg2dec   
CFLAGS_libvlccore =  -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include  
CFLAGS_linsys_sdi =   
CFLAGS_lua =  -I/usr/include/lua5.1  
CFLAGS_memcpyaltivec = 
CFLAGS_motion = 
CFLAGS_mtp =  -I/usr/include/libusb-1.0   
CFLAGS_mux_ogg =    
CFLAGS_ncurses =  -I/usr/include/ncursesw  
CFLAGS_notify =  -pthread -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/libpng12 -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/pixman-1 -I/usr/include/freetype2   
CFLAGS_ogg =    
CFLAGS_opencv_example = 
CFLAGS_opencv_wrapper = 
CFLAGS_opus =  -I/usr/include/opus   
CFLAGS_panoramix =     
CFLAGS_portaudio = 
CFLAGS_postproc =    
CFLAGS_samplerate =    
CFLAGS_schroedinger =  -I/usr/include/schroedinger-1.0 -I/usr/include/orc-0.4   
CFLAGS_sdl_image =  -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL  
CFLAGS_sid =  -DHAVE_UNIX  
CFLAGS_speex =    
CFLAGS_sqlite = 
CFLAGS_stream_out_switcher = 
CFLAGS_svg =  -pthread -I/usr/include/librsvg-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/cairo -I/usr/include/libpng12 -I/usr/include/pixman-1 -I/usr/include/freetype2   
CFLAGS_swscale =   
CFLAGS_telepathy =  -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include  
CFLAGS_theora =    
CFLAGS_twolame =    
CFLAGS_udev =    
CFLAGS_upnp =  -pthread -I/usr/include/upnp   
CFLAGS_vcdx = 
CFLAGS_vorbis =    
CFLAGS_vout_ios = 
CFLAGS_vout_sdl =  -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL  
CFLAGS_x264 =   
CFLAGS_xcb_window =  -DHAVE_XCB_KEYSYMS
CFLAGS_xml =  -I/usr/include/libxml2   
CFLAGS_xosd = 
CFLAGS_zvbi =   
CONTRIB_DIR = 
COPYRIGHT_MESSAGE = Copyright Â© 1996-2012 VLC authors and VideoLAN
COPYRIGHT_YEARS = 1996-2012
CPP = gcc -std=gnu99 -E
CPPFLAGS = -I$(top_srcdir)/include -I$(top_builddir)/include 
CPPFLAGS_a52tofloat32 =  
CPPFLAGS_access_dv = 
CPPFLAGS_access_gnomevfs = 
CPPFLAGS_access_jack = 
CPPFLAGS_access_mtp = 
CPPFLAGS_access_output_shout = 
CPPFLAGS_bonjour = 
CPPFLAGS_caca = 
CPPFLAGS_dc1394 = 
CPPFLAGS_decklink = 
CPPFLAGS_dirac = 
CPPFLAGS_directfb = 
CPPFLAGS_dmo = 
CPPFLAGS_dtstofloat32 = 
CPPFLAGS_dvdread = 
CPPFLAGS_faad = 
CPPFLAGS_flac = 
CPPFLAGS_fluidsynth = 
CPPFLAGS_freetype =  -I/usr/include/freetype2   -DHAVE_FONTCONFIG -I/usr/include/fribidi   -DHAVE_FRIBIDI
CPPFLAGS_goom = 
CPPFLAGS_jack = 
CPPFLAGS_kate = 
CPPFLAGS_libass =  -DHAVE_FONTCONFIG
CPPFLAGS_libbluray = 
CPPFLAGS_libmpeg2 = 
CPPFLAGS_mpgatofixed32 = 
CPPFLAGS_mtp = 
CPPFLAGS_mux_ogg = 
CPPFLAGS_notify = 
CPPFLAGS_ogg = 
CPPFLAGS_opencv_example = 
CPPFLAGS_opencv_wrapper = 
CPPFLAGS_opus = 
CPPFLAGS_portaudio = 
CPPFLAGS_qt4 = 
CPPFLAGS_quicktime = 
CPPFLAGS_realvideo = 
CPPFLAGS_samplerate = 
CPPFLAGS_schroedinger = 
CPPFLAGS_skins2 =  -I${top_srcdir}/modules/access/zip/unzip -I/usr/include/freetype2   -I/usr/include/fribidi   -DHAVE_FRIBIDI -Imodules/gui/skins2      -DX11_SKINS
CPPFLAGS_speex = 
CPPFLAGS_sqlite = 
CPPFLAGS_svg = 
CPPFLAGS_theora = 
CPPFLAGS_twolame =   -DLIBTWOLAME_STATIC
CPPFLAGS_udev = 
CPPFLAGS_upnp = 
CPPFLAGS_vorbis = 
CPPFLAGS_x264 = 
CPPFLAGS_xml = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wvolatile-register-var -fvisibility=hidden  -ffast-math -funroll-loops -fomit-frame-pointer
CXXFLAGS_dshow = 
CXXFLAGS_live555 =  -I/usr/include/liveMedia -I/usr/include/groupsock -I/usr/include/BasicUsageEnvironment -I/usr/include/UsageEnvironment
CXXFLAGS_mkv =  
CXXFLAGS_mod =  -I/usr/include/libmodplug  
CXXFLAGS_projectm = 
CXXFLAGS_qt4 =  -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui   
CXXFLAGS_skins2 =  -O2 -fno-rtti
CXXFLAGS_taglib =  -I/usr/include/taglib  
CXXFLAGS_upnp =  -pthread -I/usr/include/upnp  
CYGPATH_W = echo
DBUS_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include  
DBUS_LIBS = -ldbus-1  
DC1394_CFLAGS =  
DC1394_LIBS = -lraw1394 -ldc1394  
DCA_CFLAGS = -I/usr/include/libdca  
DCA_LIBS = -ldca  
DEFS = -DHAVE_CONFIG_H
DEFS_BIGENDIAN = 
DEPDIR = .deps
DESKTOP_FILE_VALIDATE = desktop-file-validate
DIRAC_CFLAGS = -I/usr/include/dirac  
DIRAC_LIBS = -ldirac_encoder -ldirac_decoder -lstdc++  
DIRECTFB_CFLAGS = 
DIRECTFB_CONFIG = 
DIRECTFB_LIBS = 
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
DVBPSI_CFLAGS =  
DVBPSI_LIBS = -ldvbpsi  
DVDNAV_CFLAGS =  
DVDNAV_LIBS = -ldvdnav -lpthread  
DVDREAD_CFLAGS =  
DVDREAD_LIBS = -ldvdread  
DV_CFLAGS =  
DV_LIBS = -lavc1394 -lrom1394 -lraw1394  
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGL_CFLAGS = 
EGL_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FILE_LIBVLCCORE_DLL = 
FILE_LIBVLC_DLL = 
FLAC_CFLAGS = -I/usr/include/FLAC  
FLAC_LIBS = -lFLAC -lm  
FLUIDSYNTH_CFLAGS =  
FLUIDSYNTH_LIBS = -lfluidsynth  
FREETYPE_CFLAGS = -I/usr/include/freetype2  
FREETYPE_LIBS = -lfreetype  
FRIBIDI_CFLAGS = -I/usr/include/fribidi  
FRIBIDI_LIBS = -lfribidi  
GCRYPT_CFLAGS = 
GCRYPT_LIBS = -L/lib/x86_64-linux-gnu -lgcrypt
GETTEXT_MACRO_VERSION = 0.18
GL_CFLAGS = -I/usr/include/libdrm  
GL_LIBS = -lGL  
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GNOMEVFS_CFLAGS = 
GNOMEVFS_LIBS = 
GNUGETOPT_LIBS = 
GNUTLS_CFLAGS = -I/usr/include/p11-kit-1  
GNUTLS_LIBS = -lgnutls  
GOOM_CFLAGS = 
GOOM_LIBS = 
GREP = /bin/grep
HILDON_CFLAGS = 
HILDON_FM_CFLAGS = 
HILDON_FM_LIBS = 
HILDON_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
JACK_CFLAGS =  
JACK_LIBS = -ljack -lpthread -lrt  
KAI_LIBS = 
KATE_CFLAGS =  
KATE_LIBS = -lkate  
KDE4_CONFIG = kde4-config
KVA_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LDFLAGS_android_surface = 
LDFLAGS_plugin = 
LDFLAGS_vlc = 
LDFLAGS_x264 = -lx264 -lpthread   
LIBASS_CFLAGS = -I/usr/include/fribidi -I/usr/include/freetype2  
LIBASS_LIBS = -lass  
LIBCDDB_CFLAGS =  
LIBCDDB_LIBS = -lcddb  
LIBCDIO_CFLAGS = 
LIBCDIO_LIBS = 
LIBDL = -ldl
LIBEXT = .so
LIBICONV = 
LIBINTL = 
LIBM = -lm
LIBMODPLUG_CFLAGS = -I/usr/include/libmodplug  
LIBMODPLUG_LIBS = -lmodplug  
LIBMPEG2_CFLAGS = -I/usr/include/mpeg2dec  
LIBMPEG2_LIBS = -lmpeg2  
LIBOBJS =  ${LIBOBJDIR}strlcpy$U.o
LIBPROXY_CFLAGS =  
LIBPROXY_LIBS = -lproxy  
LIBS = 
LIBS_a52tofloat32 =  -la52 -lm 
LIBS_aa = 
LIBS_access_avio = -Wl,-Bsymbolic -lavformat -lavcodec -lavutil    -lm 
LIBS_access_dv = -lavc1394 -lrom1394 -lraw1394    
LIBS_access_eyetv = 
LIBS_access_ftp = 
LIBS_access_gnomevfs = 
LIBS_access_http = -lproxy   -lz 
LIBS_access_imem = -lm 
LIBS_access_jack = -ljack -lpthread -lrt    
LIBS_access_mms = 
LIBS_access_mtp = -lmtp -lusb-1.0    
LIBS_access_output_shout = -lshout    
LIBS_access_output_udp = 
LIBS_access_realrtsp = 
LIBS_access_rtmp = 
LIBS_access_sftp = 
LIBS_access_smb = -lsmbclient 
LIBS_access_tcp = 
LIBS_access_udp = 
LIBS_adjust = -lm 
LIBS_audiobargraph_a = -lm 
LIBS_audioqueue = 
LIBS_audioscrobbler = 
LIBS_auhal = 
LIBS_avcodec = -lva-x11 -lva     -lX11 -Wl,-Bsymbolic -lavcodec -lavutil   -lm 
LIBS_avformat = -Wl,-Bsymbolic -lavformat -lavcodec -lavutil    -lm 
LIBS_ball = -lm 
LIBS_bonjour = -lavahi-common -lavahi-client    
LIBS_caca = -lcaca    
LIBS_cdda = -lcddb   
LIBS_chorus_flanger = -lm 
LIBS_colorthres = -lm 
LIBS_compressor = -lm 
LIBS_crystalhd = -lcrystalhd 
LIBS_dbus = -ldbus-1   -lm 
LIBS_dc1394 = -lraw1394 -ldc1394    
LIBS_dirac = -ldirac_encoder -ldirac_decoder -lstdc++    
LIBS_direct2d = 
LIBS_direct3d = 
LIBS_directfb = 
LIBS_directx = 
LIBS_dmo = -lm 
LIBS_dshow = 
LIBS_dtstofloat32 = -ldca    -lm 
LIBS_dvdnav = -ldvdnav -lpthread   
LIBS_dvdread = -ldvdread    
LIBS_equalizer = -lm 
LIBS_extract = -lm 
LIBS_faad = -lm 
LIBS_flac = -lFLAC -lm    -lm 
LIBS_fluidsynth = -lfluidsynth    
LIBS_freetype = -lfribidi   -lfontconfig -lfreetype   -lm -lm 
LIBS_gaussianblur = -lm 
LIBS_globalhotkeys = -lxcb-keysyms -lxcb   -lxcb   
LIBS_glwin32 = 
LIBS_gme = 
LIBS_gnutls = 
LIBS_goom = -lm 
LIBS_gradient = -lm 
LIBS_grain = -lm 
LIBS_growl = 
LIBS_headphone_channel_mixer = -lm 
LIBS_hildon = 
LIBS_hotkeys = -lm 
LIBS_hqdn3d = -lm 
LIBS_i420_rgb = -lm 
LIBS_i420_rgb_mmx = 
LIBS_inhibit = -ldbus-1   
LIBS_jack = -ljack -lpthread -lrt    
LIBS_kate = -lkate    -lm 
LIBS_libass = -lfontconfig -lass   
LIBS_libbluray = -lbluray    
LIBS_libmpeg2 = -lmpeg2    
LIBS_libvlc = -lpthread 
LIBS_libvlccore = -ldbus-1   -lrt -lpthread 
LIBS_linsys_sdi = -lzvbi -lpthread -lm -lpng -lz   
LIBS_lirc = 
LIBS_live555 = -lliveMedia_pic -lgroupsock_pic -lBasicUsageEnvironment_pic -lUsageEnvironment_pic 
LIBS_lua = -llua5.1   -ldl -lm 
LIBS_macosx = 
LIBS_macosx_dialog_provider = 
LIBS_memcpyaltivec = 
LIBS_minimal_macosx = 
LIBS_mkv = -lmatroska -lebml -lz 
LIBS_mod = -lmodplug   -lm 
LIBS_mono = -lm 
LIBS_mosaic = -lm 
LIBS_motion = 
LIBS_mp4 = -lz 
LIBS_mpc = -lmpcdec -lm 
LIBS_mpgatofixed32 = -lmad 
LIBS_mtp = -lmtp -lusb-1.0    
LIBS_mux_ogg = -logg    
LIBS_ncurses = -lncursesw -ltinfo   
LIBS_netsync = 
LIBS_noise = -lm 
LIBS_normvol = -lm 
LIBS_notify = -lnotify -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0    
LIBS_ogg = -logg    
LIBS_oldrc = 
LIBS_omxil = 
LIBS_opencv_example = 
LIBS_opencv_wrapper = 
LIBS_opus = -logg -lopus    -lm 
LIBS_panoramix = -lxcb-randr -lxcb   -lxcb   -lm 
LIBS_param_eq = -lm 
LIBS_plugin = -lpthread 
LIBS_png = -lpng -lz -lm 
LIBS_portaudio = 
LIBS_postproc = -lpostproc -lavutil    -lm 
LIBS_projectm = 
LIBS_psychedelic = -lm 
LIBS_qt4 =   -lSM -lICE -lX11 -lQtGui -lQtCore   -lm 
LIBS_quartztext = 
LIBS_quicktime = -lm 
LIBS_realvideo = -ldl -lm 
LIBS_remoteosd = 
LIBS_ripple = -lm 
LIBS_rotate = -lm 
LIBS_rtp = 
LIBS_samplerate = -lsamplerate    -lm 
LIBS_sap = -lz 
LIBS_scene = -lm 
LIBS_schroedinger = -lschroedinger-1.0    
LIBS_screen = 
LIBS_sdl_image = -lSDL_image -lSDL   
LIBS_sid = -lsidplay2   -lresid-builder 
LIBS_skins2 = -ltar   -lSM -lICE -lXext   -lXpm -lX11   -lXinerama   -lX11 -lfribidi   -lfreetype   ${top_builddir}/modules/access/zip/unzip/libunzip.la -lz -lm 
LIBS_spatializer = -lm 
LIBS_speex = -logg -lspeex    -lm 
LIBS_sqlite = 
LIBS_stream_out_raop = 
LIBS_stream_out_rtp = 
LIBS_stream_out_select = 
LIBS_stream_out_standard = 
LIBS_stream_out_switcher = 
LIBS_svg = -lrsvg-2 -lm -lgio-2.0 -lgdk_pixbuf-2.0 -lcairo -lgobject-2.0 -lglib-2.0    
LIBS_swscale = -Wl,-Bsymbolic -lswscale   -lm 
LIBS_taglib = -ltag   -lz 
LIBS_telepathy = -ldbus-1   
LIBS_theora = -ltheoraenc -ltheoradec -logg    
LIBS_tremor = 
LIBS_ts = 
LIBS_twolame = -ltwolame    -lm 
LIBS_udev = -ludev -lrt    
LIBS_unzip = -lz 
LIBS_upnp = -pthread -lupnp -lthreadutil -lixml    
LIBS_vcd = 
LIBS_vcdx = 
LIBS_visual = -lm 
LIBS_vlc = -lpthread 
LIBS_vod_rtsp = 
LIBS_vorbis = -lvorbisenc -lvorbis -lm -logg    
LIBS_vout_ios = 
LIBS_vout_macosx = 
LIBS_vout_sdl = -lSDL     -lSM -lICE -lX11 
LIBS_wave = -lm 
LIBS_waveout = 
LIBS_win32text = 
LIBS_wingapi = 
LIBS_wingdi = 
LIBS_x264 = -Wl,-Bsymbolic -lm -lm 
LIBS_xml = -lxml2    
LIBS_xosd = 
LIBS_zip = -lz 
LIBS_zvbi = -lzvbi -lpthread -lm -lpng -lz   
# Automake forgets to add a proper tag to libtool with Objective-C files.
# Moreocer Libtool should default tag to CC when none is specified but
# obviously does not. Here is a fix for that.
LIBTOOL = $(SHELL) $(top_builddir)/libtool --tag=CC
LIBV4L2_CFLAGS =  
LIBV4L2_LIBS = -lv4l2  
LIBVA_CFLAGS =  
LIBVA_LIBS = -lva-x11 -lva  
LIBVCDINFO_CFLAGS = 
LIBVCDINFO_LIBS = 
LIBXML2_CFLAGS = -I/usr/include/libxml2  
LIBXML2_LIBS = -lxml2  
LINSYS_SDI_CFLAGS =  
LINSYS_SDI_LIBS = -lzvbi -lpthread -lm -lpng -lz  
LIPO = 
LN_S = ln -s
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS =  ${LIBOBJDIR}strlcpy$U.lo
LTLIBa52tofloat32 = liba52tofloat32_plugin.la
LTLIBaa = 
LTLIBaccess_avio = libaccess_avio_plugin.la
LTLIBaccess_dv = libaccess_dv_plugin.la
LTLIBaccess_eyetv = 
LTLIBaccess_gnomevfs = 
LTLIBaccess_jack = libaccess_jack_plugin.la
LTLIBaccess_mtp = libaccess_mtp_plugin.la
LTLIBaccess_output_shout = libaccess_output_shout_plugin.la
LTLIBaccess_realrtsp = 
LTLIBaccess_sftp = 
LTLIBaccess_shm = libaccess_shm_plugin.la
LTLIBaccess_smb = libaccess_smb_plugin.la
LTLIBandroid_surface = 
LTLIBaout_directx = 
LTLIBatmo = libatmo_plugin.la
LTLIBaudioqueue = 
LTLIBauhal = 
LTLIBavcodec = libavcodec_plugin.la
LTLIBavformat = libavformat_plugin.la
LTLIBbonjour = libbonjour_plugin.la
LTLIBcaca = libcaca_plugin.la
LTLIBcdda = libcdda_plugin.la
LTLIBcrystalhd = libcrystalhd_plugin.la
LTLIBdbus = libdbus_plugin.la
LTLIBdc1394 = libdc1394_plugin.la
LTLIBdecklink = 
LTLIBdirac = libdirac_plugin.la
LTLIBdirect2d = 
LTLIBdirect3d = 
LTLIBdirectfb = 
LTLIBdirectx = 
LTLIBdmo = 
LTLIBdshow = 
LTLIBdtstofloat32 = libdtstofloat32_plugin.la
LTLIBdvdnav = libdvdnav_plugin.la
LTLIBdvdread = libdvdread_plugin.la
LTLIBdynamicoverlay = libdynamicoverlay_plugin.la
LTLIBegl = 
LTLIBfaad = 
LTLIBfb = libfb_plugin.la
LTLIBfbosd = 
LTLIBflac = libflac_plugin.la
LTLIBfluidsynth = libfluidsynth_plugin.la
LTLIBfreetype = libfreetype_plugin.la
LTLIBgl = 
LTLIBglobalhotkeys = libglobalhotkeys_plugin.la
LTLIBglwin32 = 
LTLIBgme = 
LTLIBgnutls = libgnutls_plugin.la
LTLIBgoom = 
LTLIBgrowl = 
LTLIBhildon = 
LTLIBinhibit = libinhibit_plugin.la
LTLIBiomx = 
LTLIBjack = libjack_plugin.la
LTLIBkate = libkate_plugin.la
LTLIBlibass = liblibass_plugin.la
LTLIBlibbluray = liblibbluray_plugin.la
LTLIBlibmpeg2 = liblibmpeg2_plugin.la
LTLIBlinsys_hdsdi = liblinsys_hdsdi_plugin.la
LTLIBlinsys_sdi = liblinsys_sdi_plugin.la
LTLIBlirc = 
LTLIBlive555 = liblive555_plugin.la
LTLIBmacosx = 
LTLIBmacosx_dialog_provider = 
LTLIBmce = 
LTLIBmedia_library = 
LTLIBminimal_macosx = 
LTLIBmkv = libmkv_plugin.la
LTLIBmod = libmod_plugin.la
LTLIBmpc = libmpc_plugin.la
LTLIBmpgatofixed32 = libmpgatofixed32_plugin.la
LTLIBmtp = libmtp_plugin.la
LTLIBmux_ogg = libmux_ogg_plugin.la
LTLIBncurses = libncurses_plugin.la
LTLIBnotify = libnotify_plugin.la
LTLIBogg = libogg_plugin.la
LTLIBomxil = 
LTLIBopencv_example = 
LTLIBopencv_wrapper = 
LTLIBopensles_android = 
LTLIBopus = libopus_plugin.la
LTLIBosd_parser = libosd_parser_plugin.la
LTLIBosdmenu = libosdmenu_plugin.la
LTLIBpanoramix = libpanoramix_plugin.la
LTLIBpng = libpng_plugin.la
LTLIBportaudio = 
LTLIBpostproc = libpostproc_plugin.la
LTLIBprojectm = 
LTLIBpvr = 
LTLIBqt4 = libqt4_plugin.la
LTLIBqtcapture = 
LTLIBqtsound = 
LTLIBquartztext = 
LTLIBquicktime = 
LTLIBrealvideo = 
LTLIBsamplerate = libsamplerate_plugin.la
LTLIBschroedinger = libschroedinger_plugin.la
LTLIBscreen = 
LTLIBsdl_image = libsdl_image_plugin.la
LTLIBshine = 
LTLIBsid = libsid_plugin.la
LTLIBskins2 = libskins2_plugin.la
LTLIBspeex = libspeex_plugin.la
LTLIBsqlite = 
LTLIBstream_out_switcher = 
LTLIBsvg = libsvg_plugin.la
LTLIBswscale = libswscale_plugin.la
LTLIBtaglib = libtaglib_plugin.la
LTLIBtelepathy = libtelepathy_plugin.la
LTLIBtelx = libtelx_plugin.la
LTLIBtheora = libtheora_plugin.la
LTLIBtremor = 
LTLIBtwolame = libtwolame_plugin.la
LTLIBudev = libudev_plugin.la
LTLIBupnp = libupnp_plugin.la
LTLIBvcd = libvcd_plugin.la
LTLIBvcdx = 
LTLIBvisual = libvisual_plugin.la
LTLIBvorbis = libvorbis_plugin.la
LTLIBvout_ios = 
LTLIBvout_macosx = 
LTLIBvout_sdl = libvout_sdl_plugin.la
LTLIBwaveout = 
LTLIBwingapi = 
LTLIBwingdi = 
LTLIBwma_fixed = 
LTLIBx264 = libx264_plugin.la
LTLIBxcb_glx = libxcb_glx_plugin.la
LTLIBxcb_xv = libxcb_xv_plugin.la
LTLIBxml = libxml_plugin.la
LTLIBxosd = 
LTLIBzvbi = libzvbi_plugin.la
LUAC = /usr/bin/luac
LUA_CFLAGS = -I/usr/include/lua5.1  
LUA_LIBS = -llua5.1  
MACOSX_DEPLOYMENT_TARGET = 
MAINT = 
MAKEINFO = ${SHELL} /home/pokac/vlc-2.0.4/autotools/missing --run makeinfo
MANIFEST_TOOL = :
MCE_CFLAGS = 
MCE_LIBS = 
MINIZIP_CFLAGS = -I\${top_srcdir}/modules/access/zip/unzip
MINIZIP_LIBS = \${top_builddir}/modules/access/zip/unzip/libunzip.la
MKDIR_P = /bin/mkdir -p
MOC = /usr/bin/moc-qt4
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
MTP_CFLAGS = -I/usr/include/libusb-1.0  
MTP_LIBS = -lmtp -lusb-1.0  
MUX_OGG_CFLAGS =  
MUX_OGG_LIBS = -logg  
NCURSES_CFLAGS = -I/usr/include/ncursesw  
NCURSES_LIBS = -lncursesw -ltinfo  
NEON_CFLAGS = 
NM = /usr/bin/nm -B
NMEDIT = 
NOTIFY_CFLAGS = -pthread -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/libpng12 -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/pixman-1 -I/usr/include/freetype2  
NOTIFY_LIBS = -lnotify -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0  
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS =  -fvisibility=hidden  -ffast-math -funroll-loops -fomit-frame-pointer
OBJCFLAGS_growl = 
OBJCFLAGS_macosx = 
OBJCFLAGS_minimal_macosx = 
OBJCOPY = 
OBJDUMP = objdump
OBJEXT = o
OGG_CFLAGS =  
OGG_LIBS = -logg  
OPENCV_CFLAGS = 
OPENCV_LIBS = 
OPUS_CFLAGS = -I/usr/include/opus  
OPUS_LIBS = -logg -lopus  
OSS_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = vlc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = vlc
PACKAGE_STRING = vlc 2.0.4
PACKAGE_TARNAME = vlc
PACKAGE_URL = 
PACKAGE_VERSION = 2.0.4
PATH_SEPARATOR = :
PKGDIR = vlc
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PORTAUDIO_CFLAGS = 
PORTAUDIO_LIBS = 
POSTPROC_CFLAGS =  
POSTPROC_LIBS = -lpostproc -lavutil  
POSUB = po
PROGRAMFILES = 
PROJECTM2_CFLAGS = 
PROJECTM2_LIBS = 
PROJECTM_CFLAGS = 
PROJECTM_LIBS = 
PULSE_CFLAGS = -D_REENTRANT  
PULSE_LIBS = -lpulse  
QT4_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui  
QT4_LIBS = -lQtGui -lQtCore  
RANLIB = ranlib
RC = 
RCC = /usr/bin/rcc
SAMPLERATE_CFLAGS =  
SAMPLERATE_LIBS = -lsamplerate  
SCHROEDINGER_CFLAGS = -I/usr/include/schroedinger-1.0 -I/usr/include/orc-0.4  
SCHROEDINGER_LIBS = -lschroedinger-1.0  
SDL_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL  
SDL_IMAGE_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL  
SDL_IMAGE_LIBS = -lSDL_image -lSDL  
SDL_LIBS = -lSDL  
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHOUT_CFLAGS = -pthread  
SHOUT_LIBS = -lshout  
SID_CFLAGS = -DHAVE_UNIX  
SID_LIBS = -lsidplay2  
SOCKET_LIBS = 
SPEEXDSP_CFLAGS =  
SPEEXDSP_LIBS = -lspeexdsp  
SPEEX_CFLAGS =  
SPEEX_LIBS = -logg -lspeex  
SQLITE_CFLAGS = 
SQLITE_LIBS = 
STRIP = strip
SVG_CFLAGS = -pthread -I/usr/include/librsvg-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/cairo -I/usr/include/libpng12 -I/usr/include/pixman-1 -I/usr/include/freetype2  
SVG_LIBS = -lrsvg-2 -lm -lgio-2.0 -lgdk_pixbuf-2.0 -lcairo -lgobject-2.0 -lglib-2.0  
SWSCALE_CFLAGS =  
SWSCALE_LIBS = -lswscale  
SYS = linux
TAGLIB_CFLAGS = -I/usr/include/taglib  
TAGLIB_LIBS = -ltag  
THEORA_CFLAGS =  
THEORA_LIBS = -ltheoraenc -ltheoradec -logg  
TIGER_CFLAGS = 
TIGER_LIBS = 
TWOLAME_CFLAGS =  
TWOLAME_LIBS = -ltwolame  
U2D = 
UDEV_CFLAGS =  
UDEV_LIBS = -ludev -lrt  
UIC = /usr/bin/uic-qt4
UPNP_CFLAGS = -pthread -I/usr/include/upnp  
UPNP_LIBS = -pthread -lupnp -lthreadutil -lixml  
USE_NLS = yes
VERSION = 2.0.4
VERSION_EXTRA = 0
VERSION_MAJOR = 2
VERSION_MESSAGE = 2.0.4 Twoflower
VERSION_MINOR = 0
VERSION_REVISION = 4
VORBIS_CFLAGS =  
VORBIS_LIBS = -lvorbisenc -lvorbis -lm -logg  
WINDRES = 
WINE_SDK_PATH = 
X264_CFLAGS =  
X264_LIBS = -lx264 -lpthread  
XCB_CFLAGS =  
XCB_COMPOSITE_CFLAGS =  
XCB_COMPOSITE_LIBS = -lxcb-composite -lxcb-xfixes -lxcb-render -lxcb-shape -lxcb  
XCB_KEYSYMS_CFLAGS =  
XCB_KEYSYMS_LIBS = -lxcb-keysyms -lxcb  
XCB_LIBS = -lxcb  
XCB_RANDR_CFLAGS =  
XCB_RANDR_LIBS = -lxcb-randr -lxcb  
XCB_SHM_CFLAGS =  
XCB_SHM_LIBS = -lxcb-shm -lxcb  
XCB_XV_CFLAGS =  
XCB_XV_LIBS = -lxcb-xv -lxcb-shm -lxcb  
XEXT_CFLAGS =  
XEXT_LIBS = -lXext  
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XINERAMA_CFLAGS =  
XINERAMA_LIBS = -lXinerama  
XMKMF = 
XPM_CFLAGS =  
XPM_LIBS = -lXpm -lX11  
XPROTO_CFLAGS =  
XPROTO_LIBS =  
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ZVBI_CFLAGS =  
ZVBI_LIBS = -lzvbi -lpthread -lm -lpng -lz  
abs_builddir = /home/pokac/vlc-2.0.4/modules/video_output
abs_srcdir = /home/pokac/vlc-2.0.4/modules/video_output
abs_top_builddir = /home/pokac/vlc-2.0.4
abs_top_srcdir = /home/pokac/vlc-2.0.4
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pokac/vlc-2.0.4/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
soliddatadir = ${datadir}/kde4/apps/solid/actions
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
vlcdatadir = ${datadir}/${PKGDIR}
vlclibdir = ${libdir}/${PKGDIR}
basedir = video_output
dir = video_output
mods = aa android_surface directfb fb vmem vout_ios vout_macosx vout_sdl yuv
libvlc_LTLIBRARIES = $(LTLIBaa) $(LTLIBandroid_surface) \
	$(LTLIBdirectfb) $(LTLIBfb) $(LTLIBvout_ios) \
	$(LTLIBvout_macosx) $(LTLIBvout_sdl) $(LTLIBgl) \
	$(am__append_2) $(LTLIBxcb_xv) $(LTLIBxcb_glx) $(am__append_3) \
	$(am__append_4) $(am__append_5) $(LTLIBegl) $(LTLIBcaca) \
	libvdummy_plugin.la libvmem_plugin.la libyuv_plugin.la
EXTRA_LTLIBRARIES = libaa_plugin.la libandroid_surface_plugin.la \
	libdirectfb_plugin.la libfb_plugin.la libvout_ios_plugin.la \
	libvout_macosx_plugin.la libvout_sdl_plugin.la \
	libgles2_plugin.la libgles1_plugin.la libgl_plugin.la \
	libxcb_xv_plugin.la libxcb_glx_plugin.la libegl_plugin.la \
	libcaca_plugin.la
NULL = 
libvlcdir = $(vlclibdir)/plugins/$(basedir)
EXTRA_DIST = Modules.am
BUILT_SOURCES = 
CLEANFILES = $(BUILT_SOURCES)
LTLIBVLCCORE = $(top_builddir)/src/libvlccore.la

# Module name from object or executable file name.
MODULE_NAME = `p="$@"; p="$${p\#\#*/}"; p="$${p\#lib}"; echo "$${p%_plugin*}"`
AM_CFLAGS = 
AM_CXXFLAGS = 
AM_OBJCFLAGS = 
AM_LDFLAGS = -rpath '$(libvlcdir)' \
	-avoid-version -module \
	-export-symbols-regex ^vlc_entry \
	-shrext $(LIBEXT) \
	-no-undefined

AM_LIBADD = $(LTLIBVLCCORE) $(top_builddir)/compat/libcompat.la $(LIBS_plugin)
SUBDIRS = msw
SOURCES_aa = aa.c
SOURCES_fb = fb.c
SOURCES_vout_sdl = sdl.c
SOURCES_directfb = directfb.c
SOURCES_vmem = vmem.c
SOURCES_yuv = yuv.c
SOURCES_vout_macosx = macosx.m opengl.h opengl.c
SOURCES_vout_ios = ios.m opengl.h opengl.c
SOURCES_android_surface = androidsurface.c

### OpenGL ###
# TODO: merge all three source files (?)
libgles2_plugin_la_SOURCES = opengl.c opengl.h gl.c
libgles2_plugin_la_CFLAGS = $(AM_CFLAGS) $(GLES2_CFLAGS) -DUSE_OPENGL_ES=2
libgles2_plugin_la_LIBADD = $(AM_LIBADD) $(GLES2_LIBS)
libgles2_plugin_la_DEPENDENCIES = 
libgles1_plugin_la_SOURCES = opengl.c opengl.h gl.c
libgles1_plugin_la_CFLAGS = $(AM_CFLAGS) $(GLES1_CFLAGS) -DUSE_OPENGL_ES=1
libgles1_plugin_la_LIBADD = $(AM_LIBADD) $(GLES1_LIBS)
libgles1_plugin_la_DEPENDENCIES = 
libgl_plugin_la_SOURCES = opengl.c opengl.h gl.c
libgl_plugin_la_CFLAGS = $(AM_CFLAGS) $(GL_CFLAGS)
libgl_plugin_la_LIBADD = $(AM_LIBADD) $(GL_LIBS)
libgl_plugin_la_DEPENDENCIES = 

### XCB ###
libxcb_x11_plugin_la_SOURCES = \
	xcb/xcb_vlc.h \
	xcb/x11.c \
	xcb/common.c \
	xcb/events.c

libxcb_x11_plugin_la_CFLAGS = $(AM_CFLAGS) \
	$(XCB_CFLAGS) $(XCB_SHM_CFLAGS)

libxcb_x11_plugin_la_LIBADD = $(AM_LIBADD) \
	$(XCB_LIBS) $(XCB_SHM_LIBS)

libxcb_x11_plugin_la_DEPENDENCIES = 
libxcb_xv_plugin_la_SOURCES = \
	xcb/xcb_vlc.h \
	xcb/xvideo.c \
	xcb/common.c \
	xcb/events.c

libxcb_xv_plugin_la_CFLAGS = $(AM_CFLAGS) \
	$(XCB_CFLAGS) $(XCB_SHM_CFLAGS) $(XCB_XV_CFLAGS)

libxcb_xv_plugin_la_LIBADD = $(AM_LIBADD) \
	$(XCB_LIBS) $(XCB_SHM_LIBS) $(XCB_XV_LIBS)

libxcb_xv_plugin_la_DEPENDENCIES = 
libxcb_glx_plugin_la_SOURCES = \
	xcb/xcb_vlc.h \
	xcb/glx.c \
	opengl.h \
	opengl.c \
	xcb/events.c

libxcb_glx_plugin_la_CFLAGS = $(AM_CFLAGS) \
	$(XCB_CFLAGS) $(GL_CFLAGS)

libxcb_glx_plugin_la_LIBADD = $(AM_LIBADD) \
	$(XCB_LIBS) $(GL_LIBS) $(X_LIBS) $(X_PRE_LIBS) -lX11

libxcb_glx_plugin_la_DEPENDENCIES = 
libxcb_window_plugin_la_SOURCES = xcb/window.c xcb/keys.c xcb/keysym.h xcb/xcb_keysym.h
libxcb_window_plugin_la_CFLAGS = $(AM_CFLAGS) \
	$(CFLAGS_xcb_window) \
	$(XPROTO_CFLAGS) \
	$(XCB_CFLAGS) \
	$(XCB_KEYSYMS_CFLAGS)

libxcb_window_plugin_la_LIBADD = $(AM_LIBADD) \
	$(XPROTO_LIBS) \
	$(XCB_LIBS) \
	$(XCB_KEYSYMS_LIBS)

libxcb_window_plugin_la_DEPENDENCIES = 

### Win32 ###
libdrawable_plugin_la_SOURCES = drawable.c
libdrawable_plugin_la_CFLAGS = $(AM_CFLAGS)
libdrawable_plugin_la_LIBADD = $(AM_LIBADD)
libdrawable_plugin_la_DEPENDENCIES = 
libkva_plugin_la_SOURCES = kva.c
libkva_plugin_la_CFLAGS = $(AM_CFLAGS)
libkva_plugin_la_LIBADD = $(AM_LIBADD) $(KVA_LIBS)
libkva_plugin_la_DEPENDENCIES = 

### EGL ###
libegl_plugin_la_SOURCES = egl.c
libegl_plugin_la_CFLAGS = $(AM_CFLAGS) $(EGL_CFLAGS)
libegl_plugin_la_LIBADD = $(AM_LIBADD) $(EGL_LIBS) $(am__append_6)
libegl_plugin_la_DEPENDENCIES = 

### Coloured ASCII art ###
libcaca_plugin_la_SOURCES = caca.c
libcaca_plugin_la_CFLAGS = $(AM_CFLAGS) $(CACA_CFLAGS)
libcaca_plugin_la_LIBADD = $(AM_LIBADD) $(CACA_LIBS) $(am__append_7)
libcaca_plugin_la_DEPENDENCIES = 

### Common ###
libvdummy_plugin_la_SOURCES = vdummy.c
libvdummy_plugin_la_CFLAGS = $(AM_CFLAGS)
libvdummy_plugin_la_LIBADD = $(AM_LIBADD)
libvdummy_plugin_la_DEPENDENCIES = 

# The aa plugin
libaa_plugin_la_SOURCES = $(SOURCES_aa)
nodist_libaa_plugin_la_SOURCES = $(nodist_SOURCES_aa)
# Force per-target objects:
libaa_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_aa)
libaa_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_aa)
libaa_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_aa)
libaa_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_aa)
# Set LIBADD and DEPENDENCIES manually:
libaa_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_aa)
libaa_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_aa)
libaa_plugin_la_DEPENDENCIES = 

# The android_surface plugin
libandroid_surface_plugin_la_SOURCES = $(SOURCES_android_surface)
nodist_libandroid_surface_plugin_la_SOURCES = $(nodist_SOURCES_android_surface)
# Force per-target objects:
libandroid_surface_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_android_surface)
libandroid_surface_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_android_surface)
libandroid_surface_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_android_surface)
libandroid_surface_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_android_surface)
# Set LIBADD and DEPENDENCIES manually:
libandroid_surface_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_android_surface)
libandroid_surface_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_android_surface)
libandroid_surface_plugin_la_DEPENDENCIES = 

# The directfb plugin
libdirectfb_plugin_la_SOURCES = $(SOURCES_directfb)
nodist_libdirectfb_plugin_la_SOURCES = $(nodist_SOURCES_directfb)
# Force per-target objects:
libdirectfb_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_directfb)
libdirectfb_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_directfb)
libdirectfb_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_directfb)
libdirectfb_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_directfb)
# Set LIBADD and DEPENDENCIES manually:
libdirectfb_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_directfb)
libdirectfb_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_directfb)
libdirectfb_plugin_la_DEPENDENCIES = 

# The fb plugin
libfb_plugin_la_SOURCES = $(SOURCES_fb)
nodist_libfb_plugin_la_SOURCES = $(nodist_SOURCES_fb)
# Force per-target objects:
libfb_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_fb)
libfb_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_fb)
libfb_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_fb)
libfb_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_fb)
# Set LIBADD and DEPENDENCIES manually:
libfb_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_fb)
libfb_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_fb)
libfb_plugin_la_DEPENDENCIES = 

# The vmem plugin
libvmem_plugin_la_SOURCES = $(SOURCES_vmem)
nodist_libvmem_plugin_la_SOURCES = $(nodist_SOURCES_vmem)
# Force per-target objects:
libvmem_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vmem)
libvmem_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vmem)
libvmem_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vmem)
libvmem_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vmem)
# Set LIBADD and DEPENDENCIES manually:
libvmem_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vmem)
libvmem_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vmem)
libvmem_plugin_la_DEPENDENCIES = 

# The vout_ios plugin
libvout_ios_plugin_la_SOURCES = $(SOURCES_vout_ios)
nodist_libvout_ios_plugin_la_SOURCES = $(nodist_SOURCES_vout_ios)
# Force per-target objects:
libvout_ios_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vout_ios)
libvout_ios_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vout_ios)
libvout_ios_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vout_ios)
libvout_ios_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vout_ios)
# Set LIBADD and DEPENDENCIES manually:
libvout_ios_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vout_ios)
libvout_ios_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vout_ios)
libvout_ios_plugin_la_DEPENDENCIES = 

# The vout_macosx plugin
libvout_macosx_plugin_la_SOURCES = $(SOURCES_vout_macosx)
nodist_libvout_macosx_plugin_la_SOURCES = $(nodist_SOURCES_vout_macosx)
# Force per-target objects:
libvout_macosx_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vout_macosx)
libvout_macosx_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vout_macosx)
libvout_macosx_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vout_macosx)
libvout_macosx_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vout_macosx)
# Set LIBADD and DEPENDENCIES manually:
libvout_macosx_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vout_macosx)
libvout_macosx_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vout_macosx)
libvout_macosx_plugin_la_DEPENDENCIES = 

# The vout_sdl plugin
libvout_sdl_plugin_la_SOURCES = $(SOURCES_vout_sdl)
nodist_libvout_sdl_plugin_la_SOURCES = $(nodist_SOURCES_vout_sdl)
# Force per-target objects:
libvout_sdl_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vout_sdl)
libvout_sdl_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vout_sdl)
libvout_sdl_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vout_sdl)
libvout_sdl_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vout_sdl)
# Set LIBADD and DEPENDENCIES manually:
libvout_sdl_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vout_sdl)
libvout_sdl_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vout_sdl)
libvout_sdl_plugin_la_DEPENDENCIES = 

# The yuv plugin
libyuv_plugin_la_SOURCES = $(SOURCES_yuv)
nodist_libyuv_plugin_la_SOURCES = $(nodist_SOURCES_yuv)
# Force per-target objects:
libyuv_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_yuv)
libyuv_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_yuv)
libyuv_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_yuv)
libyuv_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_yuv)
# Set LIBADD and DEPENDENCIES manually:
libyuv_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_yuv)
libyuv_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_yuv)
libyuv_plugin_la_DEPENDENCIES = 
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .m .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/modules/common.am $(srcdir)/Modules.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu modules/video_output/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu modules/video_output/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/modules/common.am $(srcdir)/Modules.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libvlcLTLIBRARIES: $(libvlc_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(libvlc_LTLIBRARIES)'; test -n "$(libvlcdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libvlcdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libvlcdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libvlcdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libvlcdir)"; \
	}

uninstall-libvlcLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(libvlc_LTLIBRARIES)'; test -n "$(libvlcdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libvlcdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libvlcdir)/$$f"; \
	done

clean-libvlcLTLIBRARIES:
	-test -z "$(libvlc_LTLIBRARIES)" || rm -f $(libvlc_LTLIBRARIES)
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libaa_plugin.la: $(libaa_plugin_la_OBJECTS) $(libaa_plugin_la_DEPENDENCIES) $(EXTRA_libaa_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libaa_plugin_la_LINK)  $(libaa_plugin_la_OBJECTS) $(libaa_plugin_la_LIBADD) $(LIBS)
libandroid_surface_plugin.la: $(libandroid_surface_plugin_la_OBJECTS) $(libandroid_surface_plugin_la_DEPENDENCIES) $(EXTRA_libandroid_surface_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libandroid_surface_plugin_la_LINK)  $(libandroid_surface_plugin_la_OBJECTS) $(libandroid_surface_plugin_la_LIBADD) $(LIBS)
libcaca_plugin.la: $(libcaca_plugin_la_OBJECTS) $(libcaca_plugin_la_DEPENDENCIES) $(EXTRA_libcaca_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libcaca_plugin_la_LINK)  $(libcaca_plugin_la_OBJECTS) $(libcaca_plugin_la_LIBADD) $(LIBS)
libdirectfb_plugin.la: $(libdirectfb_plugin_la_OBJECTS) $(libdirectfb_plugin_la_DEPENDENCIES) $(EXTRA_libdirectfb_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libdirectfb_plugin_la_LINK)  $(libdirectfb_plugin_la_OBJECTS) $(libdirectfb_plugin_la_LIBADD) $(LIBS)
libdrawable_plugin.la: $(libdrawable_plugin_la_OBJECTS) $(libdrawable_plugin_la_DEPENDENCIES) $(EXTRA_libdrawable_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libdrawable_plugin_la_LINK) $(am_libdrawable_plugin_la_rpath) $(libdrawable_plugin_la_OBJECTS) $(libdrawable_plugin_la_LIBADD) $(LIBS)
libegl_plugin.la: $(libegl_plugin_la_OBJECTS) $(libegl_plugin_la_DEPENDENCIES) $(EXTRA_libegl_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libegl_plugin_la_LINK)  $(libegl_plugin_la_OBJECTS) $(libegl_plugin_la_LIBADD) $(LIBS)
libfb_plugin.la: $(libfb_plugin_la_OBJECTS) $(libfb_plugin_la_DEPENDENCIES) $(EXTRA_libfb_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libfb_plugin_la_LINK)  $(libfb_plugin_la_OBJECTS) $(libfb_plugin_la_LIBADD) $(LIBS)
libgl_plugin.la: $(libgl_plugin_la_OBJECTS) $(libgl_plugin_la_DEPENDENCIES) $(EXTRA_libgl_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgl_plugin_la_LINK)  $(libgl_plugin_la_OBJECTS) $(libgl_plugin_la_LIBADD) $(LIBS)
libgles1_plugin.la: $(libgles1_plugin_la_OBJECTS) $(libgles1_plugin_la_DEPENDENCIES) $(EXTRA_libgles1_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgles1_plugin_la_LINK)  $(libgles1_plugin_la_OBJECTS) $(libgles1_plugin_la_LIBADD) $(LIBS)
libgles2_plugin.la: $(libgles2_plugin_la_OBJECTS) $(libgles2_plugin_la_DEPENDENCIES) $(EXTRA_libgles2_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgles2_plugin_la_LINK)  $(libgles2_plugin_la_OBJECTS) $(libgles2_plugin_la_LIBADD) $(LIBS)
libkva_plugin.la: $(libkva_plugin_la_OBJECTS) $(libkva_plugin_la_DEPENDENCIES) $(EXTRA_libkva_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libkva_plugin_la_LINK) $(am_libkva_plugin_la_rpath) $(libkva_plugin_la_OBJECTS) $(libkva_plugin_la_LIBADD) $(LIBS)
libvdummy_plugin.la: $(libvdummy_plugin_la_OBJECTS) $(libvdummy_plugin_la_DEPENDENCIES) $(EXTRA_libvdummy_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libvdummy_plugin_la_LINK) -rpath $(libvlcdir) $(libvdummy_plugin_la_OBJECTS) $(libvdummy_plugin_la_LIBADD) $(LIBS)
libvmem_plugin.la: $(libvmem_plugin_la_OBJECTS) $(libvmem_plugin_la_DEPENDENCIES) $(EXTRA_libvmem_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libvmem_plugin_la_LINK) -rpath $(libvlcdir) $(libvmem_plugin_la_OBJECTS) $(libvmem_plugin_la_LIBADD) $(LIBS)
libvout_ios_plugin.la: $(libvout_ios_plugin_la_OBJECTS) $(libvout_ios_plugin_la_DEPENDENCIES) $(EXTRA_libvout_ios_plugin_la_DEPENDENCIES) 
	$(AM_V_OBJCLD)$(libvout_ios_plugin_la_LINK)  $(libvout_ios_plugin_la_OBJECTS) $(libvout_ios_plugin_la_LIBADD) $(LIBS)
libvout_macosx_plugin.la: $(libvout_macosx_plugin_la_OBJECTS) $(libvout_macosx_plugin_la_DEPENDENCIES) $(EXTRA_libvout_macosx_plugin_la_DEPENDENCIES) 
	$(AM_V_OBJCLD)$(libvout_macosx_plugin_la_LINK)  $(libvout_macosx_plugin_la_OBJECTS) $(libvout_macosx_plugin_la_LIBADD) $(LIBS)
libvout_sdl_plugin.la: $(libvout_sdl_plugin_la_OBJECTS) $(libvout_sdl_plugin_la_DEPENDENCIES) $(EXTRA_libvout_sdl_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libvout_sdl_plugin_la_LINK)  $(libvout_sdl_plugin_la_OBJECTS) $(libvout_sdl_plugin_la_LIBADD) $(LIBS)
libxcb_glx_plugin.la: $(libxcb_glx_plugin_la_OBJECTS) $(libxcb_glx_plugin_la_DEPENDENCIES) $(EXTRA_libxcb_glx_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libxcb_glx_plugin_la_LINK)  $(libxcb_glx_plugin_la_OBJECTS) $(libxcb_glx_plugin_la_LIBADD) $(LIBS)
libxcb_window_plugin.la: $(libxcb_window_plugin_la_OBJECTS) $(libxcb_window_plugin_la_DEPENDENCIES) $(EXTRA_libxcb_window_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libxcb_window_plugin_la_LINK) $(am_libxcb_window_plugin_la_rpath) $(libxcb_window_plugin_la_OBJECTS) $(libxcb_window_plugin_la_LIBADD) $(LIBS)
libxcb_x11_plugin.la: $(libxcb_x11_plugin_la_OBJECTS) $(libxcb_x11_plugin_la_DEPENDENCIES) $(EXTRA_libxcb_x11_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libxcb_x11_plugin_la_LINK) $(am_libxcb_x11_plugin_la_rpath) $(libxcb_x11_plugin_la_OBJECTS) $(libxcb_x11_plugin_la_LIBADD) $(LIBS)
libxcb_xv_plugin.la: $(libxcb_xv_plugin_la_OBJECTS) $(libxcb_xv_plugin_la_DEPENDENCIES) $(EXTRA_libxcb_xv_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libxcb_xv_plugin_la_LINK)  $(libxcb_xv_plugin_la_OBJECTS) $(libxcb_xv_plugin_la_LIBADD) $(LIBS)
libyuv_plugin.la: $(libyuv_plugin_la_OBJECTS) $(libyuv_plugin_la_DEPENDENCIES) $(EXTRA_libyuv_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libyuv_plugin_la_LINK) -rpath $(libvlcdir) $(libyuv_plugin_la_OBJECTS) $(libyuv_plugin_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libaa_plugin_la-aa.Plo
include ./$(DEPDIR)/libandroid_surface_plugin_la-androidsurface.Plo
include ./$(DEPDIR)/libcaca_plugin_la-caca.Plo
include ./$(DEPDIR)/libdirectfb_plugin_la-directfb.Plo
include ./$(DEPDIR)/libdrawable_plugin_la-drawable.Plo
include ./$(DEPDIR)/libegl_plugin_la-egl.Plo
include ./$(DEPDIR)/libfb_plugin_la-fb.Plo
include ./$(DEPDIR)/libgl_plugin_la-gl.Plo
include ./$(DEPDIR)/libgl_plugin_la-opengl.Plo
include ./$(DEPDIR)/libgles1_plugin_la-gl.Plo
include ./$(DEPDIR)/libgles1_plugin_la-opengl.Plo
include ./$(DEPDIR)/libgles2_plugin_la-gl.Plo
include ./$(DEPDIR)/libgles2_plugin_la-opengl.Plo
include ./$(DEPDIR)/libkva_plugin_la-kva.Plo
include ./$(DEPDIR)/libvdummy_plugin_la-vdummy.Plo
include ./$(DEPDIR)/libvmem_plugin_la-vmem.Plo
include ./$(DEPDIR)/libvout_ios_plugin_la-ios.Plo
include ./$(DEPDIR)/libvout_ios_plugin_la-opengl.Plo
include ./$(DEPDIR)/libvout_macosx_plugin_la-macosx.Plo
include ./$(DEPDIR)/libvout_macosx_plugin_la-opengl.Plo
include ./$(DEPDIR)/libvout_sdl_plugin_la-sdl.Plo
include ./$(DEPDIR)/libxcb_glx_plugin_la-events.Plo
include ./$(DEPDIR)/libxcb_glx_plugin_la-glx.Plo
include ./$(DEPDIR)/libxcb_glx_plugin_la-opengl.Plo
include ./$(DEPDIR)/libxcb_window_plugin_la-keys.Plo
include ./$(DEPDIR)/libxcb_window_plugin_la-window.Plo
include ./$(DEPDIR)/libxcb_x11_plugin_la-common.Plo
include ./$(DEPDIR)/libxcb_x11_plugin_la-events.Plo
include ./$(DEPDIR)/libxcb_x11_plugin_la-x11.Plo
include ./$(DEPDIR)/libxcb_xv_plugin_la-common.Plo
include ./$(DEPDIR)/libxcb_xv_plugin_la-events.Plo
include ./$(DEPDIR)/libxcb_xv_plugin_la-xvideo.Plo
include ./$(DEPDIR)/libyuv_plugin_la-yuv.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libaa_plugin_la-aa.lo: aa.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaa_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libaa_plugin_la_CFLAGS) $(CFLAGS) -MT libaa_plugin_la-aa.lo -MD -MP -MF $(DEPDIR)/libaa_plugin_la-aa.Tpo -c -o libaa_plugin_la-aa.lo `test -f 'aa.c' || echo '$(srcdir)/'`aa.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libaa_plugin_la-aa.Tpo $(DEPDIR)/libaa_plugin_la-aa.Plo
#	$(AM_V_CC)source='aa.c' object='libaa_plugin_la-aa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaa_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libaa_plugin_la_CFLAGS) $(CFLAGS) -c -o libaa_plugin_la-aa.lo `test -f 'aa.c' || echo '$(srcdir)/'`aa.c

libandroid_surface_plugin_la-androidsurface.lo: androidsurface.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libandroid_surface_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libandroid_surface_plugin_la_CFLAGS) $(CFLAGS) -MT libandroid_surface_plugin_la-androidsurface.lo -MD -MP -MF $(DEPDIR)/libandroid_surface_plugin_la-androidsurface.Tpo -c -o libandroid_surface_plugin_la-androidsurface.lo `test -f 'androidsurface.c' || echo '$(srcdir)/'`androidsurface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libandroid_surface_plugin_la-androidsurface.Tpo $(DEPDIR)/libandroid_surface_plugin_la-androidsurface.Plo
#	$(AM_V_CC)source='androidsurface.c' object='libandroid_surface_plugin_la-androidsurface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libandroid_surface_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libandroid_surface_plugin_la_CFLAGS) $(CFLAGS) -c -o libandroid_surface_plugin_la-androidsurface.lo `test -f 'androidsurface.c' || echo '$(srcdir)/'`androidsurface.c

libcaca_plugin_la-caca.lo: caca.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_plugin_la_CFLAGS) $(CFLAGS) -MT libcaca_plugin_la-caca.lo -MD -MP -MF $(DEPDIR)/libcaca_plugin_la-caca.Tpo -c -o libcaca_plugin_la-caca.lo `test -f 'caca.c' || echo '$(srcdir)/'`caca.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcaca_plugin_la-caca.Tpo $(DEPDIR)/libcaca_plugin_la-caca.Plo
#	$(AM_V_CC)source='caca.c' object='libcaca_plugin_la-caca.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_plugin_la_CFLAGS) $(CFLAGS) -c -o libcaca_plugin_la-caca.lo `test -f 'caca.c' || echo '$(srcdir)/'`caca.c

libdirectfb_plugin_la-directfb.lo: directfb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdirectfb_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libdirectfb_plugin_la_CFLAGS) $(CFLAGS) -MT libdirectfb_plugin_la-directfb.lo -MD -MP -MF $(DEPDIR)/libdirectfb_plugin_la-directfb.Tpo -c -o libdirectfb_plugin_la-directfb.lo `test -f 'directfb.c' || echo '$(srcdir)/'`directfb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libdirectfb_plugin_la-directfb.Tpo $(DEPDIR)/libdirectfb_plugin_la-directfb.Plo
#	$(AM_V_CC)source='directfb.c' object='libdirectfb_plugin_la-directfb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdirectfb_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libdirectfb_plugin_la_CFLAGS) $(CFLAGS) -c -o libdirectfb_plugin_la-directfb.lo `test -f 'directfb.c' || echo '$(srcdir)/'`directfb.c

libdrawable_plugin_la-drawable.lo: drawable.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdrawable_plugin_la_CFLAGS) $(CFLAGS) -MT libdrawable_plugin_la-drawable.lo -MD -MP -MF $(DEPDIR)/libdrawable_plugin_la-drawable.Tpo -c -o libdrawable_plugin_la-drawable.lo `test -f 'drawable.c' || echo '$(srcdir)/'`drawable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libdrawable_plugin_la-drawable.Tpo $(DEPDIR)/libdrawable_plugin_la-drawable.Plo
#	$(AM_V_CC)source='drawable.c' object='libdrawable_plugin_la-drawable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdrawable_plugin_la_CFLAGS) $(CFLAGS) -c -o libdrawable_plugin_la-drawable.lo `test -f 'drawable.c' || echo '$(srcdir)/'`drawable.c

libegl_plugin_la-egl.lo: egl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libegl_plugin_la_CFLAGS) $(CFLAGS) -MT libegl_plugin_la-egl.lo -MD -MP -MF $(DEPDIR)/libegl_plugin_la-egl.Tpo -c -o libegl_plugin_la-egl.lo `test -f 'egl.c' || echo '$(srcdir)/'`egl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libegl_plugin_la-egl.Tpo $(DEPDIR)/libegl_plugin_la-egl.Plo
#	$(AM_V_CC)source='egl.c' object='libegl_plugin_la-egl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libegl_plugin_la_CFLAGS) $(CFLAGS) -c -o libegl_plugin_la-egl.lo `test -f 'egl.c' || echo '$(srcdir)/'`egl.c

libfb_plugin_la-fb.lo: fb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfb_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libfb_plugin_la_CFLAGS) $(CFLAGS) -MT libfb_plugin_la-fb.lo -MD -MP -MF $(DEPDIR)/libfb_plugin_la-fb.Tpo -c -o libfb_plugin_la-fb.lo `test -f 'fb.c' || echo '$(srcdir)/'`fb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb_plugin_la-fb.Tpo $(DEPDIR)/libfb_plugin_la-fb.Plo
#	$(AM_V_CC)source='fb.c' object='libfb_plugin_la-fb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfb_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libfb_plugin_la_CFLAGS) $(CFLAGS) -c -o libfb_plugin_la-fb.lo `test -f 'fb.c' || echo '$(srcdir)/'`fb.c

libgl_plugin_la-opengl.lo: opengl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgl_plugin_la_CFLAGS) $(CFLAGS) -MT libgl_plugin_la-opengl.lo -MD -MP -MF $(DEPDIR)/libgl_plugin_la-opengl.Tpo -c -o libgl_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgl_plugin_la-opengl.Tpo $(DEPDIR)/libgl_plugin_la-opengl.Plo
#	$(AM_V_CC)source='opengl.c' object='libgl_plugin_la-opengl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgl_plugin_la_CFLAGS) $(CFLAGS) -c -o libgl_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c

libgl_plugin_la-gl.lo: gl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgl_plugin_la_CFLAGS) $(CFLAGS) -MT libgl_plugin_la-gl.lo -MD -MP -MF $(DEPDIR)/libgl_plugin_la-gl.Tpo -c -o libgl_plugin_la-gl.lo `test -f 'gl.c' || echo '$(srcdir)/'`gl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgl_plugin_la-gl.Tpo $(DEPDIR)/libgl_plugin_la-gl.Plo
#	$(AM_V_CC)source='gl.c' object='libgl_plugin_la-gl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgl_plugin_la_CFLAGS) $(CFLAGS) -c -o libgl_plugin_la-gl.lo `test -f 'gl.c' || echo '$(srcdir)/'`gl.c

libgles1_plugin_la-opengl.lo: opengl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgles1_plugin_la_CFLAGS) $(CFLAGS) -MT libgles1_plugin_la-opengl.lo -MD -MP -MF $(DEPDIR)/libgles1_plugin_la-opengl.Tpo -c -o libgles1_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgles1_plugin_la-opengl.Tpo $(DEPDIR)/libgles1_plugin_la-opengl.Plo
#	$(AM_V_CC)source='opengl.c' object='libgles1_plugin_la-opengl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgles1_plugin_la_CFLAGS) $(CFLAGS) -c -o libgles1_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c

libgles1_plugin_la-gl.lo: gl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgles1_plugin_la_CFLAGS) $(CFLAGS) -MT libgles1_plugin_la-gl.lo -MD -MP -MF $(DEPDIR)/libgles1_plugin_la-gl.Tpo -c -o libgles1_plugin_la-gl.lo `test -f 'gl.c' || echo '$(srcdir)/'`gl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgles1_plugin_la-gl.Tpo $(DEPDIR)/libgles1_plugin_la-gl.Plo
#	$(AM_V_CC)source='gl.c' object='libgles1_plugin_la-gl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgles1_plugin_la_CFLAGS) $(CFLAGS) -c -o libgles1_plugin_la-gl.lo `test -f 'gl.c' || echo '$(srcdir)/'`gl.c

libgles2_plugin_la-opengl.lo: opengl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgles2_plugin_la_CFLAGS) $(CFLAGS) -MT libgles2_plugin_la-opengl.lo -MD -MP -MF $(DEPDIR)/libgles2_plugin_la-opengl.Tpo -c -o libgles2_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgles2_plugin_la-opengl.Tpo $(DEPDIR)/libgles2_plugin_la-opengl.Plo
#	$(AM_V_CC)source='opengl.c' object='libgles2_plugin_la-opengl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgles2_plugin_la_CFLAGS) $(CFLAGS) -c -o libgles2_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c

libgles2_plugin_la-gl.lo: gl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgles2_plugin_la_CFLAGS) $(CFLAGS) -MT libgles2_plugin_la-gl.lo -MD -MP -MF $(DEPDIR)/libgles2_plugin_la-gl.Tpo -c -o libgles2_plugin_la-gl.lo `test -f 'gl.c' || echo '$(srcdir)/'`gl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgles2_plugin_la-gl.Tpo $(DEPDIR)/libgles2_plugin_la-gl.Plo
#	$(AM_V_CC)source='gl.c' object='libgles2_plugin_la-gl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgles2_plugin_la_CFLAGS) $(CFLAGS) -c -o libgles2_plugin_la-gl.lo `test -f 'gl.c' || echo '$(srcdir)/'`gl.c

libkva_plugin_la-kva.lo: kva.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libkva_plugin_la_CFLAGS) $(CFLAGS) -MT libkva_plugin_la-kva.lo -MD -MP -MF $(DEPDIR)/libkva_plugin_la-kva.Tpo -c -o libkva_plugin_la-kva.lo `test -f 'kva.c' || echo '$(srcdir)/'`kva.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libkva_plugin_la-kva.Tpo $(DEPDIR)/libkva_plugin_la-kva.Plo
#	$(AM_V_CC)source='kva.c' object='libkva_plugin_la-kva.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libkva_plugin_la_CFLAGS) $(CFLAGS) -c -o libkva_plugin_la-kva.lo `test -f 'kva.c' || echo '$(srcdir)/'`kva.c

libvdummy_plugin_la-vdummy.lo: vdummy.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvdummy_plugin_la_CFLAGS) $(CFLAGS) -MT libvdummy_plugin_la-vdummy.lo -MD -MP -MF $(DEPDIR)/libvdummy_plugin_la-vdummy.Tpo -c -o libvdummy_plugin_la-vdummy.lo `test -f 'vdummy.c' || echo '$(srcdir)/'`vdummy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvdummy_plugin_la-vdummy.Tpo $(DEPDIR)/libvdummy_plugin_la-vdummy.Plo
#	$(AM_V_CC)source='vdummy.c' object='libvdummy_plugin_la-vdummy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvdummy_plugin_la_CFLAGS) $(CFLAGS) -c -o libvdummy_plugin_la-vdummy.lo `test -f 'vdummy.c' || echo '$(srcdir)/'`vdummy.c

libvmem_plugin_la-vmem.lo: vmem.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvmem_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvmem_plugin_la_CFLAGS) $(CFLAGS) -MT libvmem_plugin_la-vmem.lo -MD -MP -MF $(DEPDIR)/libvmem_plugin_la-vmem.Tpo -c -o libvmem_plugin_la-vmem.lo `test -f 'vmem.c' || echo '$(srcdir)/'`vmem.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvmem_plugin_la-vmem.Tpo $(DEPDIR)/libvmem_plugin_la-vmem.Plo
#	$(AM_V_CC)source='vmem.c' object='libvmem_plugin_la-vmem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvmem_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvmem_plugin_la_CFLAGS) $(CFLAGS) -c -o libvmem_plugin_la-vmem.lo `test -f 'vmem.c' || echo '$(srcdir)/'`vmem.c

libvout_ios_plugin_la-opengl.lo: opengl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_ios_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_ios_plugin_la_CFLAGS) $(CFLAGS) -MT libvout_ios_plugin_la-opengl.lo -MD -MP -MF $(DEPDIR)/libvout_ios_plugin_la-opengl.Tpo -c -o libvout_ios_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvout_ios_plugin_la-opengl.Tpo $(DEPDIR)/libvout_ios_plugin_la-opengl.Plo
#	$(AM_V_CC)source='opengl.c' object='libvout_ios_plugin_la-opengl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_ios_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_ios_plugin_la_CFLAGS) $(CFLAGS) -c -o libvout_ios_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c

libvout_macosx_plugin_la-opengl.lo: opengl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_macosx_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_macosx_plugin_la_CFLAGS) $(CFLAGS) -MT libvout_macosx_plugin_la-opengl.lo -MD -MP -MF $(DEPDIR)/libvout_macosx_plugin_la-opengl.Tpo -c -o libvout_macosx_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvout_macosx_plugin_la-opengl.Tpo $(DEPDIR)/libvout_macosx_plugin_la-opengl.Plo
#	$(AM_V_CC)source='opengl.c' object='libvout_macosx_plugin_la-opengl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_macosx_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_macosx_plugin_la_CFLAGS) $(CFLAGS) -c -o libvout_macosx_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c

libvout_sdl_plugin_la-sdl.lo: sdl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_sdl_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_plugin_la_CFLAGS) $(CFLAGS) -MT libvout_sdl_plugin_la-sdl.lo -MD -MP -MF $(DEPDIR)/libvout_sdl_plugin_la-sdl.Tpo -c -o libvout_sdl_plugin_la-sdl.lo `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvout_sdl_plugin_la-sdl.Tpo $(DEPDIR)/libvout_sdl_plugin_la-sdl.Plo
#	$(AM_V_CC)source='sdl.c' object='libvout_sdl_plugin_la-sdl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_sdl_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_plugin_la_CFLAGS) $(CFLAGS) -c -o libvout_sdl_plugin_la-sdl.lo `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c

libxcb_glx_plugin_la-glx.lo: xcb/glx.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_glx_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_glx_plugin_la-glx.lo -MD -MP -MF $(DEPDIR)/libxcb_glx_plugin_la-glx.Tpo -c -o libxcb_glx_plugin_la-glx.lo `test -f 'xcb/glx.c' || echo '$(srcdir)/'`xcb/glx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_glx_plugin_la-glx.Tpo $(DEPDIR)/libxcb_glx_plugin_la-glx.Plo
#	$(AM_V_CC)source='xcb/glx.c' object='libxcb_glx_plugin_la-glx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_glx_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_glx_plugin_la-glx.lo `test -f 'xcb/glx.c' || echo '$(srcdir)/'`xcb/glx.c

libxcb_glx_plugin_la-opengl.lo: opengl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_glx_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_glx_plugin_la-opengl.lo -MD -MP -MF $(DEPDIR)/libxcb_glx_plugin_la-opengl.Tpo -c -o libxcb_glx_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_glx_plugin_la-opengl.Tpo $(DEPDIR)/libxcb_glx_plugin_la-opengl.Plo
#	$(AM_V_CC)source='opengl.c' object='libxcb_glx_plugin_la-opengl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_glx_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_glx_plugin_la-opengl.lo `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c

libxcb_glx_plugin_la-events.lo: xcb/events.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_glx_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_glx_plugin_la-events.lo -MD -MP -MF $(DEPDIR)/libxcb_glx_plugin_la-events.Tpo -c -o libxcb_glx_plugin_la-events.lo `test -f 'xcb/events.c' || echo '$(srcdir)/'`xcb/events.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_glx_plugin_la-events.Tpo $(DEPDIR)/libxcb_glx_plugin_la-events.Plo
#	$(AM_V_CC)source='xcb/events.c' object='libxcb_glx_plugin_la-events.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_glx_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_glx_plugin_la-events.lo `test -f 'xcb/events.c' || echo '$(srcdir)/'`xcb/events.c

libxcb_window_plugin_la-window.lo: xcb/window.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_window_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_window_plugin_la-window.lo -MD -MP -MF $(DEPDIR)/libxcb_window_plugin_la-window.Tpo -c -o libxcb_window_plugin_la-window.lo `test -f 'xcb/window.c' || echo '$(srcdir)/'`xcb/window.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_window_plugin_la-window.Tpo $(DEPDIR)/libxcb_window_plugin_la-window.Plo
#	$(AM_V_CC)source='xcb/window.c' object='libxcb_window_plugin_la-window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_window_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_window_plugin_la-window.lo `test -f 'xcb/window.c' || echo '$(srcdir)/'`xcb/window.c

libxcb_window_plugin_la-keys.lo: xcb/keys.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_window_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_window_plugin_la-keys.lo -MD -MP -MF $(DEPDIR)/libxcb_window_plugin_la-keys.Tpo -c -o libxcb_window_plugin_la-keys.lo `test -f 'xcb/keys.c' || echo '$(srcdir)/'`xcb/keys.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_window_plugin_la-keys.Tpo $(DEPDIR)/libxcb_window_plugin_la-keys.Plo
#	$(AM_V_CC)source='xcb/keys.c' object='libxcb_window_plugin_la-keys.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_window_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_window_plugin_la-keys.lo `test -f 'xcb/keys.c' || echo '$(srcdir)/'`xcb/keys.c

libxcb_x11_plugin_la-x11.lo: xcb/x11.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_x11_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_x11_plugin_la-x11.lo -MD -MP -MF $(DEPDIR)/libxcb_x11_plugin_la-x11.Tpo -c -o libxcb_x11_plugin_la-x11.lo `test -f 'xcb/x11.c' || echo '$(srcdir)/'`xcb/x11.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_x11_plugin_la-x11.Tpo $(DEPDIR)/libxcb_x11_plugin_la-x11.Plo
#	$(AM_V_CC)source='xcb/x11.c' object='libxcb_x11_plugin_la-x11.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_x11_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_x11_plugin_la-x11.lo `test -f 'xcb/x11.c' || echo '$(srcdir)/'`xcb/x11.c

libxcb_x11_plugin_la-common.lo: xcb/common.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_x11_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_x11_plugin_la-common.lo -MD -MP -MF $(DEPDIR)/libxcb_x11_plugin_la-common.Tpo -c -o libxcb_x11_plugin_la-common.lo `test -f 'xcb/common.c' || echo '$(srcdir)/'`xcb/common.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_x11_plugin_la-common.Tpo $(DEPDIR)/libxcb_x11_plugin_la-common.Plo
#	$(AM_V_CC)source='xcb/common.c' object='libxcb_x11_plugin_la-common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_x11_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_x11_plugin_la-common.lo `test -f 'xcb/common.c' || echo '$(srcdir)/'`xcb/common.c

libxcb_x11_plugin_la-events.lo: xcb/events.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_x11_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_x11_plugin_la-events.lo -MD -MP -MF $(DEPDIR)/libxcb_x11_plugin_la-events.Tpo -c -o libxcb_x11_plugin_la-events.lo `test -f 'xcb/events.c' || echo '$(srcdir)/'`xcb/events.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_x11_plugin_la-events.Tpo $(DEPDIR)/libxcb_x11_plugin_la-events.Plo
#	$(AM_V_CC)source='xcb/events.c' object='libxcb_x11_plugin_la-events.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_x11_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_x11_plugin_la-events.lo `test -f 'xcb/events.c' || echo '$(srcdir)/'`xcb/events.c

libxcb_xv_plugin_la-xvideo.lo: xcb/xvideo.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_xv_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_xv_plugin_la-xvideo.lo -MD -MP -MF $(DEPDIR)/libxcb_xv_plugin_la-xvideo.Tpo -c -o libxcb_xv_plugin_la-xvideo.lo `test -f 'xcb/xvideo.c' || echo '$(srcdir)/'`xcb/xvideo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_xv_plugin_la-xvideo.Tpo $(DEPDIR)/libxcb_xv_plugin_la-xvideo.Plo
#	$(AM_V_CC)source='xcb/xvideo.c' object='libxcb_xv_plugin_la-xvideo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_xv_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_xv_plugin_la-xvideo.lo `test -f 'xcb/xvideo.c' || echo '$(srcdir)/'`xcb/xvideo.c

libxcb_xv_plugin_la-common.lo: xcb/common.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_xv_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_xv_plugin_la-common.lo -MD -MP -MF $(DEPDIR)/libxcb_xv_plugin_la-common.Tpo -c -o libxcb_xv_plugin_la-common.lo `test -f 'xcb/common.c' || echo '$(srcdir)/'`xcb/common.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_xv_plugin_la-common.Tpo $(DEPDIR)/libxcb_xv_plugin_la-common.Plo
#	$(AM_V_CC)source='xcb/common.c' object='libxcb_xv_plugin_la-common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_xv_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_xv_plugin_la-common.lo `test -f 'xcb/common.c' || echo '$(srcdir)/'`xcb/common.c

libxcb_xv_plugin_la-events.lo: xcb/events.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_xv_plugin_la_CFLAGS) $(CFLAGS) -MT libxcb_xv_plugin_la-events.lo -MD -MP -MF $(DEPDIR)/libxcb_xv_plugin_la-events.Tpo -c -o libxcb_xv_plugin_la-events.lo `test -f 'xcb/events.c' || echo '$(srcdir)/'`xcb/events.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxcb_xv_plugin_la-events.Tpo $(DEPDIR)/libxcb_xv_plugin_la-events.Plo
#	$(AM_V_CC)source='xcb/events.c' object='libxcb_xv_plugin_la-events.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxcb_xv_plugin_la_CFLAGS) $(CFLAGS) -c -o libxcb_xv_plugin_la-events.lo `test -f 'xcb/events.c' || echo '$(srcdir)/'`xcb/events.c

libyuv_plugin_la-yuv.lo: yuv.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libyuv_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libyuv_plugin_la_CFLAGS) $(CFLAGS) -MT libyuv_plugin_la-yuv.lo -MD -MP -MF $(DEPDIR)/libyuv_plugin_la-yuv.Tpo -c -o libyuv_plugin_la-yuv.lo `test -f 'yuv.c' || echo '$(srcdir)/'`yuv.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyuv_plugin_la-yuv.Tpo $(DEPDIR)/libyuv_plugin_la-yuv.Plo
#	$(AM_V_CC)source='yuv.c' object='libyuv_plugin_la-yuv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libyuv_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libyuv_plugin_la_CFLAGS) $(CFLAGS) -c -o libyuv_plugin_la-yuv.lo `test -f 'yuv.c' || echo '$(srcdir)/'`yuv.c

.m.o:
	$(AM_V_OBJC)$(OBJCCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
	$(AM_V_OBJC)$(OBJCCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.m.lo:
	$(AM_V_OBJC)$(LTOBJCCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_OBJC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LTOBJCCOMPILE) -c -o $@ $<

libvout_ios_plugin_la-ios.lo: ios.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_ios_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_ios_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libvout_ios_plugin_la-ios.lo -MD -MP -MF $(DEPDIR)/libvout_ios_plugin_la-ios.Tpo -c -o libvout_ios_plugin_la-ios.lo `test -f 'ios.m' || echo '$(srcdir)/'`ios.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvout_ios_plugin_la-ios.Tpo $(DEPDIR)/libvout_ios_plugin_la-ios.Plo
#	$(AM_V_OBJC)source='ios.m' object='libvout_ios_plugin_la-ios.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_ios_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_ios_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libvout_ios_plugin_la-ios.lo `test -f 'ios.m' || echo '$(srcdir)/'`ios.m

libvout_macosx_plugin_la-macosx.lo: macosx.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_macosx_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_macosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libvout_macosx_plugin_la-macosx.lo -MD -MP -MF $(DEPDIR)/libvout_macosx_plugin_la-macosx.Tpo -c -o libvout_macosx_plugin_la-macosx.lo `test -f 'macosx.m' || echo '$(srcdir)/'`macosx.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvout_macosx_plugin_la-macosx.Tpo $(DEPDIR)/libvout_macosx_plugin_la-macosx.Plo
#	$(AM_V_OBJC)source='macosx.m' object='libvout_macosx_plugin_la-macosx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvout_macosx_plugin_la_CPPFLAGS) $(CPPFLAGS) $(libvout_macosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libvout_macosx_plugin_la-macosx.lo `test -f 'macosx.m' || echo '$(srcdir)/'`macosx.m

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libvlcdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-libvlcLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-libvlcLTLIBRARIES

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-libvlcLTLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	ctags-recursive install install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic clean-libtool \
	clean-libvlcLTLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libvlcLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-libvlcLTLIBRARIES


$(srcdir)/Makefile.am: $(srcdir)/Modules.am $(top_srcdir)/modules/genmf
	$(AM_V_GEN)cd \$(top_srcdir) && \$(SHELL) modules/genmf $(dir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
